// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using product_service.Storage;

#nullable disable

namespace product_service.Storage.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20231119134439_Restaurant-Product-Add-Data")]
    partial class RestaurantProductAddData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("product_service.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductDbSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc1c6aad-18f3-40da-b337-1f55609baa12"),
                            Description = "Description 1",
                            Enabled = true,
                            Name = "Product 1",
                            Price = 30.53m,
                            QuantityAvailable = 2
                        },
                        new
                        {
                            Id = new Guid("14d2aa24-15af-4286-9dd5-8aa0939bef8b"),
                            Description = "Description 2",
                            Enabled = true,
                            Name = "Product 2",
                            Price = 15.53m,
                            QuantityAvailable = 0
                        },
                        new
                        {
                            Id = new Guid("acf788bf-f881-4249-9104-ae62cd7262ce"),
                            Description = "Description 3",
                            Enabled = false,
                            Name = "Product 3",
                            Price = 15.53m,
                            QuantityAvailable = 10
                        },
                        new
                        {
                            Id = new Guid("b4951e10-76e9-4ef1-b050-31c8e41f02c1"),
                            Description = "Description 1",
                            Enabled = true,
                            Name = "Product 4",
                            Price = 30.53m,
                            QuantityAvailable = 2
                        },
                        new
                        {
                            Id = new Guid("d3785f31-20b8-4d48-9e2b-7a1f456d05b2"),
                            Description = "Description 2",
                            Enabled = true,
                            Name = "Product 5",
                            Price = 15.53m,
                            QuantityAvailable = 0
                        },
                        new
                        {
                            Id = new Guid("cf1711ce-216a-45c7-9234-8dd9e54dfb0c"),
                            Description = "Description 3",
                            Enabled = false,
                            Name = "Product 6",
                            Price = 15.53m,
                            QuantityAvailable = 10
                        });
                });

            modelBuilder.Entity("product_service.Models.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("CloseHour")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RestaurantDbSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b950909-bd47-42fc-aae5-b20d426f992b"),
                            CloseHour = new TimeSpan(1),
                            Description = "KFC Description",
                            Name = "KFC",
                            OpenDays = "[1,2,3,4,5,6,0]",
                            TagsType = "[0,1]"
                        },
                        new
                        {
                            Id = new Guid("e6a953fd-597a-409f-9cee-cb87b94483c8"),
                            CloseHour = new TimeSpan(2),
                            Description = "Mc Donalds Description",
                            Name = "Mc Donalds",
                            OpenDays = "[1,2,3,4,5,6,0]",
                            TagsType = "[2,1]"
                        });
                });

            modelBuilder.Entity("product_service.Models.RestaurantProduct", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("RestaurantProduct");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6b950909-bd47-42fc-aae5-b20d426f992b"),
                            ProductId = new Guid("cc1c6aad-18f3-40da-b337-1f55609baa12")
                        },
                        new
                        {
                            RestaurantId = new Guid("6b950909-bd47-42fc-aae5-b20d426f992b"),
                            ProductId = new Guid("14d2aa24-15af-4286-9dd5-8aa0939bef8b")
                        },
                        new
                        {
                            RestaurantId = new Guid("6b950909-bd47-42fc-aae5-b20d426f992b"),
                            ProductId = new Guid("acf788bf-f881-4249-9104-ae62cd7262ce")
                        },
                        new
                        {
                            RestaurantId = new Guid("e6a953fd-597a-409f-9cee-cb87b94483c8"),
                            ProductId = new Guid("b4951e10-76e9-4ef1-b050-31c8e41f02c1")
                        },
                        new
                        {
                            RestaurantId = new Guid("e6a953fd-597a-409f-9cee-cb87b94483c8"),
                            ProductId = new Guid("d3785f31-20b8-4d48-9e2b-7a1f456d05b2")
                        },
                        new
                        {
                            RestaurantId = new Guid("e6a953fd-597a-409f-9cee-cb87b94483c8"),
                            ProductId = new Guid("cf1711ce-216a-45c7-9234-8dd9e54dfb0c")
                        });
                });

            modelBuilder.Entity("product_service.Models.RestaurantProduct", b =>
                {
                    b.HasOne("product_service.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("product_service.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Restaurant");
                });
#pragma warning restore 612, 618
        }
    }
}
